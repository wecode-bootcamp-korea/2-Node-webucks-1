// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@map("categories")
}

model Product {
  id               Int              @id @default(autoincrement())
  koreanName       String           @map("korean_name")
  englishName      String           @map("english_name")
  Category         Category         @relation(fields: [categoryId], references: [id])
  categoryId       Int              @map("category_id")
  iamges           Image[]
  productAllergies ProductAllergy[]
  likes            Like[]
  comments         Comment[]
  nutrition        Nutrition?

  @@map("products")
}

model Image {
  id        Int     @id @default(autoincrement())
  imageUrl  String  @map("image_url") @db.Text
  Product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")

  @@map("images")
}

model Allergy {
  id              Int              @id @default(autoincrement())
  name            String
  productAlleries ProductAllergy[]

  @@map("allergies")
}

model ProductAllergy {
  id        Int     @id @default(autoincrement())
  Allergy   Allergy @relation(fields: [allergyId], references: [id])
  allergyId Int     @map("allergy_id")
  Product   Product @relation(fields: [productId], references: [id])
  productId Int     @map("product_id")

  @@map("product_allergies")
}

model Nutrition {
  id           Int     @id @default(autoincrement())
  size         String
  kcal         Int
  saturatedFat Int     @map("saturated_fat")
  protein      Int
  sodium       Int
  sugars       Int
  caffeine     Int
  product      Product @relation(fields: [productId], references: [id])
  productId    Int     @map("product_id")

  @@map("nutritions")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  username     String?
  address      String?
  phoneNumber  String?   @map("phone_number")
  policyAgreed Boolean   @default(true) @map("policy_agreed")
  likes        Like[]
  comments     Comment[]

  @@map("users")
}

model Like {
  id        Int @id @default(autoincrement())
  userId    Int @map("user_id")
  productId Int @map("product_id")

  Product Product @relation(fields: [productId], references: [id])
  User    User    @relation(fields: [userId], references: [id])
  @@map("likes")
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String    @db.VarChar(500)
  userId    Int       @map("user_id")
  productId Int       @map("product_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  Product   Product   @relation(fields: [productId], references: [id])
  User      User      @relation(fields: [userId], references: [id])

  @@map("comments")
}
